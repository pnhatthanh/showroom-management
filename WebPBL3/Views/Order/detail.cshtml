@model WebPBL3.DTO.DetailOrderDTO;
@{
    ViewData["Title"] = "Chi tiết đơn hàng";
    Layout = "_AdminLayout"; 
    int count = 1;
}
<div class="container">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="text-center">
                <h2 class="text-white py-2">Chi tiết hóa đơn</h2>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <div class="invoice-title">
                        @if (@Model.Status == "Đã thanh toán")
                        {
                            <h4 class="float-end">
                                <span class="badge bg-success font-size-12 ms-2 p-2">Đã thanh toán</span>
                            </h4>
                        }
                        else
                        {
                            <h4 class="float-end">
                                <span class="badge bg-danger font-size-12 p-3 ms-2">Chưa thanh toán</span>
                            </h4>
                        }
                        <div class="mb-4">
                            <h2 class="mb-1 text-danger">Showroom DragonCar</h2>
                        </div>
                        <div class="fs-5">
                            <p class="mb-1">
                                <i class="fa-solid fa-location-dot pr-2 text-danger"></i>Liên Chiểu, Đà Nẵng
                            </p>
                            <p class="mb-1"><i class="fa-solid fa-envelope pr-2 text-danger"></i>dragoncar@gmail.com</p>
                            <p><i class="fa-solid fa-phone pr-2 text-danger"></i> 012-345-6789</p>
                        </div>
                    </div>

                    <hr class="my-4">

                    <div class="row">
                        <div class="col-sm-6">
                            <div class="fs-5 ">
                                <h4 class="mb-2">Thông tin khách hàng</h4>
                                <p class="mb-1" style="line-height: 1.6">
                                    <span class="fw-bolder">Họ và tên khách hàng: </span>
                                    @Model.CustomerName
                                </p>
                                <p class="mb-1"><span class="fw-bolder">Địa chỉ: </span> @Model.Address</p>
                                <p class="mb-1"><span class="fw-bolder">Email: </span> @Model.EmailCustomer</p>
                                <p class="mb-1">
                                    <span class="fw-bolder">Số điện thoại: </span> @Model.Phone
                                </p>
                            </div>
                            <div class="fs-5 mt-3">
                                <h4 class="mb-2">Thông tin nhân viên</h4>
                                <p class="mb-1" style="line-height: 1.6">
                                    <span class="fw-bolder">Mã nhân viên: </span> @Model.StaffId
                                </p>
                                <p class="mb-1">
                                    <span class="fw-bolder">Họ và tên nhân viên: </span> @Model.StaffName
                                </p>
                                <p class="mb-1"><span class="fw-bolder">Email: </span> @Model.EmailStaff</p>
                            </div>
                        </div>
                        <div class="col-sm-6 fs-5" style="border-left: solid 1px; line-height: 1.6">
                            <h4 class="mb-2">Thông tin đơn hàng</h4>
                            <p class="mb-1"><span class="fw-bolder">Mã háo đơn: </span> @Model.OrderId</p>
                            <p class="mb-1">
                                <span class="fw-bolder">Ngày mua hàng: </span>
                                @Model.PurchaseDate.ToString("dd/MM/yyyy")
                            </p>
                            <div class="table-responsive">
                                <table class="table align-middle table-nowrap table-centered mb-0">
                                    <thead>
                                        <tr>
                                            <th style="width: 70px;">STT</th>
                                            <th>Tên xe</th>
                                            <th>Giá xe</th>
                                            <th>Số lượng</th>
                                            <th class="text-end" style="width: 120px;">Thành tiền</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.items)
                                        {
                                            <tr>
                                                <th scope="row">@(count++)</th>
                                                <td>
                                                    <div>
                                                        <h5 class="text-truncate font-size-14 mb-1">
                                                            @item.carName
                                                        </h5>
                                                        <p class="mb-0">@item.color</p>
                                                    </div>
                                                </td>
                                                <td>
                                                    @item.price.ToString("C", new
                                                             System.Globalization.CultureInfo("vi-VN"))
                                                </td>
                                                <td>@item.quantity</td>
                                                <td class="text-end">
                                                    @((item.price *
                                                        item.quantity).ToString("C", new
                                                        System.Globalization.CultureInfo("vi-VN")))
                                                </td>
                                            </tr>
                                        }
                                        <tr>
                                            <th scope="row" colspan="5" class="text-end">
                                                Tổng tiền:
                                                <span class="m-0 fw-semibold">
                                                    @Model.ToTalPrice.ToString("C", new
                                                             System.Globalization.CultureInfo("vi-VN"))
                                                </span>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div><!-- end col -->
        <div class="col-lg-12 text-center">
            <a asp-action="Index" asp-controller="Order" class="btn btn-danger">
                Quay
                lại
            </a>
        </div>
    </div>
</div>
<script>
    async function getData() {
        const url = "https://raw.githubusercontent.com/kenzouno1/DiaGioiHanhChinhVN/master/data.json"
        try {
            const response = await fetch(url);
            const data = await response.json();
            return data;
        } catch (error) {
            alert('Loi fetch api: ', error);
        }
    }
    async function renderCities() {
        const res = await getData();
        res.forEach(city => {
            cities.options[cities.options.length] = new Option(city.Name, city.Id);
        });
        cities.onchange = function () {
            if (this.value !== "") {
                const selectedCity = res.find(city => city.Id === this.value);
                if (selectedCity && selectedCity.Districts) {
                    selectedCity.Districts.forEach(district => {
                        districts.options[districts.options.length] = new Option(district.Name, district.Id);
                    });
                }
            }
        };
        districts.onchange = function () {
            if (this.value !== "") {
                const dataDistincts = res.find(city => city.Id === cities.value).Districts;
                const selectedDistrict = dataDistincts.find(district => district.Id === this.value);
                if (selectedDistrict && selectedDistrict.Wards) {
                    selectedDistrict.Wards.forEach(ward => {
                        wards.options[wards.options.length] = new Option(ward.Name, ward.Id);
                    });
                }
            }
        }
    }

    async function extractAddress(addr) {
        await renderCities();
        const arr = addr.split('-');
        console.log(arr);
        if (arr[0] !== "") {
            street.value = arr[0];
        }
        if (arr[1] != "" && arr[1] !== undefined) {
            cities.value = arr[1].toString();
            console.log("cities.value= " + arr[1].toString());
            cities.dispatchEvent(new Event('change'));
        }
        if (arr[2] != "" && arr[2] !== undefined) {
            districts.value = arr[2].toString();
            districts.dispatchEvent(new Event('change'));
        }
        if (arr[3] != "" && arr[3] !== undefined) {
            wards.value = arr[3].toString();
        }
    }

</script>